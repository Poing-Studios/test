name: Upload Asset

on:
  push:
    tags:
      - 'v*'

jobs:
  upload_asset:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install requests
      run: pip install requests

    - name: Upload asset
      env:
        USERNAME: ${{ secrets.USERNAME }}
        PASSWORD: ${{ secrets.PASSWORD }}
      run: |
        #!/bin/bash

        # Define as variáveis com os dados do asset
        NAME="My Asset"
        VERSION="1.0.0"
        CATEGORY="Tools"
        GODOT_VERSION="3.2.2"
        DESCRIPTION="My asset description"
        USERNAME=${{ secrets.USERNAME }}
        PASSWORD=${{ secrets.PASSWORD }}
        ASSET_FILE="test"

        # Faz a solicitação de login para obter o cookie de autenticação
        LOGIN_RESPONSE=$(curl -s -c cookie.txt -X POST https://godotengine.org/asset-library/api/login -d "username=${USERNAME}&password=${PASSWORD}")

        # Obtém o cookie de autenticação do cabeçalho da resposta de login
        GDA_TOKEN=$(cat cookie.txt | grep gdartoken | awk '{print $7}')

        # Faz a solicitação de upload do asset
        UPLOAD_RESPONSE=$(curl -s -X POST https://godotengine.org/asset-library/api/upload \
                          -H "Cookie: gdartoken=${GDA_TOKEN}" \
                          -F "name=${NAME}" \
                          -F "version=${VERSION}" \
                          -F "category=${CATEGORY}" \
                          -F "godot_version=${GODOT_VERSION}" \
                          -F "description=${DESCRIPTION}" \
                          -F "file=@${ASSET_FILE}")

        # Verifica se a solicitação foi bem-sucedida
        if [[ $(echo ${UPLOAD_RESPONSE} | grep -c "Asset uploaded successfully") -eq 1 ]]; then
          echo "Asset enviado com sucesso!"
        else
          echo "Erro ao enviar o asset: ${UPLOAD_RESPONSE}"
        fi

        # Remove o arquivo de cookie
        rm -f cookie.txt
